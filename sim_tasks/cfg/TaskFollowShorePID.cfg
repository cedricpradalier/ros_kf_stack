#! /usr/bin/env python
# Task Long configuration

PACKAGE='sim_tasks'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from task_manager_lib.parameter_generator import *

gen = TaskParameterGenerator()
#       Name                    Type            Description
#       Default    Min   Max
gen.add("angle",         double_t, 0,    "Reference angle between the boat and the shore",  1.57)
gen.add("distance",      double_t, 0,    "Reference distance between the boat and the shore",  8.0)
gen.add("p_alpha",       double_t, 0,    "Gain for angular control",  0.3)
gen.add("p_d",           double_t, 0,    "Gain for distance control",  0.2)
gen.add("i_alpha",       double_t, 0,    "Gain for angular velocity control",  0.01)
gen.add("i_d",           double_t, 0,    "Gain for velocity control",  0.01)
gen.add("d_alpha",       double_t, 0,    "Gain for angular acceleration control",  -0.1)
gen.add("d_d",           double_t, 0,    "Gain for acceleration control",  -0.1)
gen.add("velocity",      double_t, 0,    "Initial velocity of the boat",  0.3)
gen.add("angle_range",   double_t, 0,    "Maximal angle which can be detected",  2.35)
gen.add("dist_threshold",double_t, 0,    "Distance maximum of detection of the shore",  30.0)
gen.add("dist_goal",     double_t, 0,    "Distance threshold to consider the goal is reached",  1.0)
gen.add("K_E",   	 double_t, 0,    "Curvature exponential control gain",  2.0)
gen.add("rot_tol",   	 double_t, 0,    "Rotational velocity tolerance",  .75)
gen.add("E_ang_max",     double_t, 0,    "Maximum angular error influence",  1.5)
gen.add("E_lin_max",     double_t, 0,    "Maximum linear error influence",  .75)
gen.add("max_ang_vel",   double_t, 0,    "Maximum angular velocity",  1.5)
gen.add("max_lin_vel",   double_t, 0,    "Maximum linear velocity",  0.5)

exit(gen.generate(PACKAGE, "sim_tasks", "TaskFollowShorePID"))

