/* Auto-generated by genmsg_cpp for file /home/adam/ros_workspace/ros_kf_stack/kf_yaw_kf/srv/SetMagOffset.srv */
#ifndef KF_YAW_KF_SERVICE_SETMAGOFFSET_H
#define KF_YAW_KF_SERVICE_SETMAGOFFSET_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace kf_yaw_kf
{
template <class ContainerAllocator>
struct SetMagOffsetRequest_ {
  typedef SetMagOffsetRequest_<ContainerAllocator> Type;

  SetMagOffsetRequest_()
  : mag_x_offset(0.0)
  , mag_y_offset(0.0)
  , mag_z_offset(0.0)
  {
  }

  SetMagOffsetRequest_(const ContainerAllocator& _alloc)
  : mag_x_offset(0.0)
  , mag_y_offset(0.0)
  , mag_z_offset(0.0)
  {
  }

  typedef float _mag_x_offset_type;
  float mag_x_offset;

  typedef float _mag_y_offset_type;
  float mag_y_offset;

  typedef float _mag_z_offset_type;
  float mag_z_offset;


  typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetMagOffsetRequest
typedef  ::kf_yaw_kf::SetMagOffsetRequest_<std::allocator<void> > SetMagOffsetRequest;

typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetRequest> SetMagOffsetRequestPtr;
typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetRequest const> SetMagOffsetRequestConstPtr;


template <class ContainerAllocator>
struct SetMagOffsetResponse_ {
  typedef SetMagOffsetResponse_<ContainerAllocator> Type;

  SetMagOffsetResponse_()
  {
  }

  SetMagOffsetResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct SetMagOffsetResponse
typedef  ::kf_yaw_kf::SetMagOffsetResponse_<std::allocator<void> > SetMagOffsetResponse;

typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetResponse> SetMagOffsetResponsePtr;
typedef boost::shared_ptr< ::kf_yaw_kf::SetMagOffsetResponse const> SetMagOffsetResponseConstPtr;

struct SetMagOffset
{

typedef SetMagOffsetRequest Request;
typedef SetMagOffsetResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetMagOffset
} // namespace kf_yaw_kf

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "658dd2586f9c7d77f232884f7526eb51";
  }

  static const char* value(const  ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x658dd2586f9c7d77ULL;
  static const uint64_t static_value2 = 0xf232884f7526eb51ULL;
};

template<class ContainerAllocator>
struct DataType< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "kf_yaw_kf/SetMagOffsetRequest";
  }

  static const char* value(const  ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 mag_x_offset\n\
float32 mag_y_offset\n\
float32 mag_z_offset\n\
\n\
";
  }

  static const char* value(const  ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "kf_yaw_kf/SetMagOffsetResponse";
  }

  static const char* value(const  ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.mag_x_offset);
    stream.next(m.mag_y_offset);
    stream.next(m.mag_z_offset);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetMagOffsetRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetMagOffsetResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<kf_yaw_kf::SetMagOffset> {
  static const char* value() 
  {
    return "658dd2586f9c7d77f232884f7526eb51";
  }

  static const char* value(const kf_yaw_kf::SetMagOffset&) { return value(); } 
};

template<>
struct DataType<kf_yaw_kf::SetMagOffset> {
  static const char* value() 
  {
    return "kf_yaw_kf/SetMagOffset";
  }

  static const char* value(const kf_yaw_kf::SetMagOffset&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "658dd2586f9c7d77f232884f7526eb51";
  }

  static const char* value(const kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "kf_yaw_kf/SetMagOffset";
  }

  static const char* value(const kf_yaw_kf::SetMagOffsetRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "658dd2586f9c7d77f232884f7526eb51";
  }

  static const char* value(const kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "kf_yaw_kf/SetMagOffset";
  }

  static const char* value(const kf_yaw_kf::SetMagOffsetResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // KF_YAW_KF_SERVICE_SETMAGOFFSET_H

